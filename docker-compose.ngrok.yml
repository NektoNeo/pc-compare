version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: pc-compare-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pc-compare-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Backend API - изменен порт на 8001
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pc-compare-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      VK_CLIENT_ID: ${VK_CLIENT_ID}
      VK_CLIENT_SECRET: ${VK_CLIENT_SECRET}
      VK_TOKEN: ${VK_TOKEN}
      PUBLIC_BASE_URL: https://pc.builds.ngrok.app
      SECRET_KEY: ${SECRET_KEY}
      MIN_PRICE: ${MIN_PRICE}
      PRICE_COMPARISON_RANGE: ${PRICE_COMPARISON_RANGE}
      VK_GROUP_IDS: ${VK_GROUP_IDS}
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    ports:
      - "8001:8000"  # Внешний порт 8001, внутренний остается 8000
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend - изменен порт на 3001
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: https://pc.builds.ngrok.app/api
    container_name: pc-compare-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3001:3000"  # Внешний порт 3001, внутренний остается 3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      REACT_APP_API_URL: https://pc.builds.ngrok.app/api
    command: npm start

  # Nginx Reverse Proxy - основной порт для ngrok
  nginx:
    image: nginx:alpine
    container_name: pc-compare-nginx
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    ports:
      - "8080:80"   # Используем порт 8080 для HTTP
      - "8443:443"  # Используем порт 8443 для HTTPS
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: pc-compare-network